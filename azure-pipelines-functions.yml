trigger:
  - develop

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  runtime: 'netcoreapp3.1'

steps:
  - script: dotnet test Backend/Functions/SmartSkating.Azure.Tests/SmartSkating.Azure.Tests.csproj /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:ExcludeByAttribute=GeneratedCodeAttribute /p:Include=\"[SmartSkating.Azure]*,[SmartSkating.Dto]*,[*Function]*\"
    displayName: 'Run functions tests'

  - bash: |
      bash <(curl -s https://codecov.io/bash) -f "Backend/Functions/SmartSkating.Azure.Tests/coverage.opencover.xml" -t $(codecov.token)
    displayName: 'Upload functions tests results'

  - script: dotnet build Backend/Functions/SmartSkating.Functions/SmartSkating.Functions.csproj -c $(buildConfiguration) -v d
    displayName: 'Build functions'

  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: 'Backend/Functions/SmartSkating.Functions/bin/Release/$(runtime)/'
      includeRootFolder: false
      archiveType: 'zip'
      archiveFile: 'Backend/Functions/SmartSkating.Functions/bin/Release/Function.zip'
      replaceExistingArchive: true
      verbose: true
    displayName: 'Archive functions'

  - task: AzureFunctionApp@1
    inputs:
      azureSubscription: 'AzureDevSubscription'
      appType: 'functionApp'
      appName: 'smartskating'
      package: 'Backend/Functions/SmartSkating.Functions/bin/Release/Function.zip'
      deploymentMethod: 'auto'
    displayName: 'Publish functions'
